{"version":3,"sources":["serviceWorker.js","components/Button/index.js","components/Menu/index.js","components/Footer/styles.js","components/Footer/index.js","components/PageDefault/index.js","components/FormField/index.js","hooks/useForm.js","repositories/wallet.js","pages/Home/index.js","repositories/assets.js","pages/wallet/Invest/index.js","pages/wallet/Dashboard/index.js","index.js"],"names":["Boolean","window","location","hostname","match","Button","styled","button","Menu","className","to","as","Link","FooterBase","footer","Image","img","Footer","href","src","alt","Main","main","paddingAll","css","PageDefault","children","FormFieldWrapper","div","Label","label","Text","span","TextHelp","small","Input","input","hasValue","FormField","type","name","value","onChange","suggestions","onBlur","pattern","min","max","step","fieldId","tag","length","hasSuggestions","htmlFor","id","autoComplete","list","undefined","map","suggestion","key","defaultProps","useForm","initialValues","useState","values","setValues","handleChange","eventInfo","target","getAttribute","clearForm","getWalletCombo","fetch","then","response","a","ok","json","Error","getWallet","purchaseAsset","objectAsset","method","headers","body","JSON","stringify","Home","quantityAssetsForecast","localStorage","getItem","setItem","walletName","useEffect","walletRepository","toString","getAll","resposta","getForecast","valueToApply","pageSize","pageIndex","queryString","parseInt","WalletInvestiment","walletId","history","useHistory","assetName","assets","setAssets","assetsNames","asset","onSubmit","event","preventDefault","chosenAsset","find","item","assetForecastId","console","log","push","assetRepository","index","symbol","valuePrice","price","Intl","NumberFormat","style","currency","format","WalletDashBoard","walletAssets","wallet","setWallet","_formatPriceUSD","_appendLeadingZeroes","number","inputDate","date","Date","parse","formattedDate","getDate","getMonth","getFullYear","formattedTime","getHours","getMinutes","getSeconds","_formatDate","colSpan","align","reduce","sum","ReactDOM","render","path","component","exact","WalletDashboard","display","alignItems","justifyContent","flexDirection","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7c98acbc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  color: var(--white);\r\n  border: 1px solid var(--white);\r\n  background: var(--black);\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n  padding: 16px 24px;\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  outline: none;\r\n  border-radius: 5px;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  transition: opacity .3s;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: .5;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Menu.css';\r\nimport Button from '../Button';\r\n\r\nfunction Menu() {\r\n  return (\r\n    <nav className=\"Menu\">\r\n      <Link to=\"/\">\r\n        <span className=\"Logo\">Fuzzy Trader</span>\r\n      </Link>\r\n\r\n      <div>\r\n        <Button as={Link} className=\"ButtonLink\" to=\"/wallet/dashboard\">\r\n          Wallet\r\n      </Button>\r\n        <Button as={Link} className=\"ButtonLink\" to=\"/wallet/apply\">\r\n          Apply\r\n      </Button>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Menu;","import styled from 'styled-components';\r\n\r\nexport const FooterBase = styled.footer`\r\n  background: var(--black);\r\n  border-top: 2px solid var(--primary);\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  padding-top: 32px;\r\n  padding-bottom: 32px;\r\n  color: var(--white);\r\n  text-align: center;\r\n  @media (max-width: 800px) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 10%;\r\n  height: auto;\r\n`;","import React from 'react';\r\nimport { FooterBase, Image } from './styles';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <FooterBase>\r\n      <a href=\"https://bxblue.com.br/\">\r\n        <Image src=\"https://bxblue.com.br/aprenda/wp-content/uploads/2018/01/bxblue-newlogo.png\" alt=\"Logo bxblue\" />\r\n      </a>\r\n      <p>\r\n        Made by\r\n        {' '}\r\n        <a href=\"https://github.com/guilemoss/bxblue\">guilemoss</a>\r\n      </p>\r\n    </FooterBase>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport Menu from '../Menu';\r\nimport Footer from '../Footer';\r\n\r\nconst Main = styled.main`\r\n  background-color: var(--black);\r\n  color: var(--white);\r\n  flex: 1;\r\n  padding-top: 50px;\r\n  padding-left: 5%;\r\n  padding-right: 5%;\r\n  ${({ paddingAll }) => css`\r\n  paddingAll: ${paddingAll};\r\n  `}\r\n`;\r\n\r\nfunction PageDefault({ children, paddingAll }) {\r\n  return (\r\n    <>\r\n      <Menu />\r\n      <Main paddingAll={paddingAll}>\r\n        {children}\r\n      </Main>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PageDefault;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nconst FormFieldWrapper = styled.div`\n  position: relative; \n  textarea {\n    min-height: 150px;\n  }\n  input[type=\"color\"] {\n    padding-left: 56px;\n  }\n`;\n\nconst Label = styled.label``;\nLabel.Text = styled.span`\n  color: #E5E5E5;\n  height: 57px;\n  position: absolute; \n  top: 0;\n  left: 16px;\n  \n  display: flex;\n  align-items: center;\n  \n  transform-origin: 0% 0%;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 300;\n  \n  transition: .1s ease-in-out;\n`;\n\nLabel.TextHelp = styled.small`\n  color: #6c757d;\n  font-size: 80%;\n  font-weight: 400;\n`;\n\nconst Input = styled.input`\n  background: #53585D;\n  color: #F5F5F5;\n  display: block;\n  width: 100%;\n  height: 57px;\n  font-size: 18px;\n  \n  outline: 0;\n  border: 0;\n  border-top: 4px solid transparent;\n  border-bottom: 4px solid #53585D;\n  \n  padding: 16px 16px;\n  margin-bottom: 45px;\n  \n  resize: none;\n  border-radius: 4px;\n  transition: border-color .3s;\n  \n  &:focus {\n    border-bottom-color: var(--primary);\n  }\n  &:focus:not([type=\"color\"]) + span {\n    transform: scale(.6) translateY(-10px);\n  }\n  ${({ hasValue }) => hasValue && css`\n    &:not([type=\"color\"]) + span {\n      transform: scale(.6) translateY(-10px);\n    }\n  `}\n`;\n\nfunction FormField({\n  label, type, name, value, onChange, suggestions, onBlur, pattern, min, max, step\n}) {\n  const fieldId = `id_${name}`;\n  const isTypeTextarea = type === 'textarea';\n  const tag = isTypeTextarea ? 'textarea' : 'input';\n\n  const hasValue = Boolean(value.length);\n  const hasSuggestions = Boolean(suggestions.length);\n\n  return (\n    <FormFieldWrapper>\n      <Label\n        htmlFor={fieldId}\n      >\n        <Input\n          as={tag}\n          id={fieldId}\n          type={type}\n          value={value}\n          name={name}\n          hasValue={hasValue}\n          onChange={onChange}\n          onBlur={onBlur}\n          autoComplete={hasSuggestions ? 'off' : 'on'}\n          list={hasSuggestions ? `suggestionFor_${fieldId}` : undefined}\n          pattern={pattern}\n          min={min}\n          max={max}\n          step={step}\n        />\n        <Label.Text>\n          {label}\n          :\n        </Label.Text>\n        {\n          hasSuggestions && (\n            <datalist id={`suggestionFor_${fieldId}`}>\n              {\n                suggestions.map((suggestion) => (\n                  <option value={suggestion} key={`suggestionFor_${fieldId}_option${suggestion}`}>\n                    {suggestion}\n                  </option>\n                ))\n              }\n            </datalist>\n          )\n        }\n      </Label>\n    </FormFieldWrapper>\n  );\n}\n\nFormField.defaultProps = {\n  type: 'text',\n  value: '',\n  onChange: () => { },\n  suggestions: [],\n};\n\nFormField.propTypes = {\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  suggestions: PropTypes.arrayOf(PropTypes.string),\n  pattern: PropTypes.string,\n  min: PropTypes.string,\n  max: PropTypes.string,\n  step: PropTypes.string\n};\n\nexport default FormField;\n","import { useState } from 'react';\n\nfunction useForm(initialValues) {\n  const [values, setValues] = useState(initialValues);\n\n  function setValue(key, value) {\n    setValues({\n      ...values,\n      [key]: value,\n    });\n  }\n\n  function handleChange(eventInfo) {\n    setValue(\n      eventInfo.target.getAttribute('name'),\n      eventInfo.target.value,\n    );\n  }\n\n  function clearForm() {\n    setValues(initialValues);\n  }\n\n  return {\n    values,\n    handleChange,\n    clearForm,\n  };\n}\n\nexport default useForm;\n","function getWalletCombo() {\n  return fetch('api/wallet/combo')\n    .then(async (response) => {\n      if (response.ok) {\n        return await response.json();\n      }\n\n      throw new Error('Coulnd\\'t get data');\n    });\n}\n\nfunction getWallet(id) {\n  return fetch(`../api/wallet/${id}`)\n    .then(async (response) => {\n      if (response.ok) {\n        return await response.json();\n      }\n\n      throw new Error('Coulnd\\'t get data');\n    });\n}\n\nfunction purchaseAsset(objectAsset) {\n  return fetch('../api/wallet/purchase', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(objectAsset),\n  })\n    .then(async (response) => {\n      if (response.ok) {\n        return response.ok;\n      }\n      throw new Error('Couldn\\'t purchase the asset.');\n    });\n}\n\nexport default {\n  getWalletCombo,\n  getWallet,\n  purchaseAsset\n};\n","import React, { useEffect } from 'react';\r\nimport PageDefault from '../../components/PageDefault';\r\nimport FormField from '../../components/FormField';\r\nimport useForm from '../../hooks/useForm';\r\nimport walletRepository from '../../repositories/wallet';\r\n\r\nfunction Home() {\r\n    const quantityAssetsForecastDefault = 3;\r\n    const quantityAssetsForecast = (localStorage.getItem('quantityAssetsForecast')\r\n        ? localStorage.getItem('quantityAssetsForecast') : quantityAssetsForecastDefault);\r\n\r\n    localStorage.setItem('quantityAssetsForecast', quantityAssetsForecast);\r\n    const walletName = localStorage.getItem('walletName') ? localStorage.getItem('walletName') : '';\r\n\r\n    const initialValues = {\r\n        walletName: walletName,\r\n        quantityAssetsForecast: quantityAssetsForecast\r\n    };\r\n\r\n    const { values, handleChange } = useForm(initialValues);\r\n\r\n    useEffect(() => {\r\n        walletRepository\r\n            .getWalletCombo()\r\n            .then((response) => {\r\n                localStorage.setItem('walletId', response[0].id);\r\n                localStorage.setItem('walletName', response[0].name);\r\n            });\r\n    }, []);\r\n\r\n    function handleBur() {\r\n        localStorage.setItem('quantityAssetsForecast', values.quantityAssetsForecast);\r\n    }\r\n\r\n    return (\r\n        <PageDefault>\r\n            <h1>Settings</h1>\r\n            <form>\r\n                <FormField\r\n                    label=\"Quantity assets forecast\"\r\n                    type=\"number\"\r\n                    name=\"quantityAssetsForecast\"\r\n                    value={values.quantityAssetsForecast.toString()}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBur}\r\n                    pattern=\"[0-9]*\"\r\n                    min=\"3\"\r\n                    max=\"20\"\r\n                    step=\"5\"\r\n                />\r\n            </form>\r\n        </PageDefault >\r\n    );\r\n}\r\n\r\nexport default Home;","function getAll() {\n  return fetch('../api/asset')\n    .then(async (response) => {\n      if (response.ok) {\n        const resposta = await response.json();\n        return resposta;\n      }\n\n      throw new Error('Coulnd\\'t get data');\n    });\n}\n\nfunction getForecast(valueToApply, pageSize, pageIndex) {\n  let queryString = '';\n\n  if (parseInt(pageSize) > 0)\n    queryString = `?pageSize=${pageSize}`;\n\n  if (parseInt(pageIndex) > 0)\n    queryString += `&pageIndex=${pageIndex}`;\n\n    return fetch(`../api/asset/forecast/${valueToApply}${queryString}`)\n    .then(async (response) => {\n      if (response.ok) {\n        const resposta = await response.json();\n        return resposta;\n      }\n    });\n}\n\nexport default {\n  getAll,\n  getForecast\n};\n","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport PageDefault from '../../../components/PageDefault';\r\nimport FormField from '../../../components/FormField';\r\nimport Button from '../../../components/Button';\r\nimport useForm from '../../../hooks/useForm';\r\nimport assetRepository from '../../../repositories/assets';\r\nimport walletRepository from '../../../repositories/wallet';\r\n\r\nfunction WalletInvestiment() {\r\n    const quantityAssetsForecast = localStorage.getItem('quantityAssetsForecast');\r\n    const walletId = localStorage.getItem('walletId');\r\n    const history = useHistory();\r\n    const initialValues = {\r\n        walletId: walletId,\r\n        assetName: '',\r\n        valueToApply: ''\r\n    };\r\n\r\n    const [assets, setAssets] = useState([]);\r\n    const assetsNames = assets.map(({ asset }) => asset.name);\r\n\r\n    const { values, handleChange } = useForm(initialValues);\r\n\r\n    function handleGetAssetsForecast() {\r\n        if (parseInt(values.valueToApply) >= 0) {\r\n            assetRepository\r\n                .getForecast(values.valueToApply, quantityAssetsForecast)\r\n                .then((response) => {\r\n                    setAssets(response);\r\n                });\r\n        }\r\n    }\r\n\r\n    function _formatPriceUSD(valuePrice) {\r\n        return Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(valuePrice);\r\n    }\r\n\r\n    return (\r\n        <PageDefault>\r\n            <h1>\r\n                Would you like to apply?\r\n                {` ${values.valueToApply}`}\r\n            </h1>\r\n\r\n            <form onSubmit={function handleSubmit(event) {\r\n                event.preventDefault();\r\n\r\n                const chosenAsset = assets.find((item) => item.asset.name === values.assetName);\r\n\r\n                walletRepository.purchaseAsset({\r\n                    value: parseInt(values.valueToApply),\r\n                    walletId: initialValues.walletId,\r\n                    assetForecastId: chosenAsset.id,\r\n                })\r\n                    .then(() => {\r\n                        console.log('Investment made successfully!');\r\n                        history.push('/wallet/dashboard');\r\n                    });\r\n            }}\r\n            >\r\n\r\n                <FormField\r\n                    label=\"USD\"\r\n                    type=\"number\"\r\n                    name=\"valueToApply\"\r\n                    value={values.valueToApply}\r\n                    onChange={handleChange}\r\n                    onBlur={handleGetAssetsForecast}\r\n                    pattern=\"[0-9]*\"\r\n                    min=\"100\"\r\n                    step=\"100\"\r\n                />\r\n\r\n                <FormField\r\n                    label=\"Asset\"\r\n                    name=\"assetName\"\r\n                    value={values.assetName}\r\n                    onChange={handleChange}\r\n                    suggestions={assetsNames}\r\n                />\r\n                <Button type=\"submit\">\r\n                    Purchase\r\n                </Button>\r\n            </form>\r\n            {\r\n                assets.length > 0 && (\r\n                    <div id=\"assetsStatistics\">\r\n                        <h1>Statistics </h1>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Score</th>\r\n                                    <th>Name</th>\r\n                                    <th>Symbol</th>\r\n                                    <th>Price</th>\r\n                                    <th>Amount</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {assets.length &&\r\n                                    assets.map((item, index) => (\r\n                                        <tr key={item.id}>\r\n                                            <td>{item.asset.symbol===\"BTC\" ? \"-\" : `${(index + 1)}º`}</td>\r\n                                            <td>{item.asset.name}</td>\r\n                                            <td id=\"symbol\"><span className={item.asset.symbol===\"BTC\" ? \"BTC\" :\"\"}>{item.asset.symbol}</span></td>\r\n                                            <td className=\"currency\">{_formatPriceUSD(item.price)}</td>\r\n                                            <td id=\"amount\" className=\"number\">{parseInt(item.value / item.price)}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                        <br />\r\n                        <small className=\"text-muted\">We're using moving average for the last 30 days based on the closing value.</small>\r\n                        <br />\r\n                        <small className=\"text-muted\">\r\n                            {`Showing bitcoin and ${quantityAssetsForecast} assets based on your `}\r\n                            <Link to=\"/\">settings.</Link>\r\n                        </small>\r\n                    </div>)\r\n            }\r\n            <Link to=\"/\">Go Homepage</Link>\r\n        </PageDefault >\r\n    );\r\n}\r\n\r\nexport default WalletInvestiment;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PageDefault from '../../../components/PageDefault';\r\nimport walletRepository from '../../../repositories/wallet';\r\n\r\nfunction WalletDashBoard() {\r\n    const walletId = localStorage.getItem('walletId');\r\n    const [wallet, setWallet] = useState({ id: '', name: '', walletAssets: [] });\r\n\r\n    useEffect(() => {\r\n        walletRepository\r\n            .getWallet(walletId)\r\n            .then((response) => {\r\n                setWallet(response);\r\n            });\r\n    }, [walletId]);\r\n\r\n    const _formatPriceUSD = (value) =>\r\n        new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD'\r\n        }).format(value);\r\n\r\n    const _appendLeadingZeroes = (number) =>\r\n        (number <= 9) ? \"0\" + number : number;\r\n\r\n    const _formatDate = (inputDate) => {\r\n        const date = new Date(Date.parse(inputDate));\r\n        const formattedDate = _appendLeadingZeroes(date.getDate()) + \"-\" + _appendLeadingZeroes(date.getMonth() + 1) + \"-\" + date.getFullYear();\r\n        const formattedTime = _appendLeadingZeroes(date.getHours()) + \":\" + _appendLeadingZeroes(date.getMinutes()) + \":\" + _appendLeadingZeroes(date.getSeconds());\r\n        return `${formattedDate} ${formattedTime}`;\r\n    };\r\n\r\n    return (\r\n        <PageDefault>\r\n            <h1>\r\n                Your wallet {wallet.name} has\r\n        {` ${wallet && wallet.walletAssets?.length} `}\r\n        assets\r\n      </h1>\r\n            <Link to=\"/\">\r\n                Go Homepage\r\n            </Link>\r\n            {\r\n                wallet.walletAssets.length > 0 && (\r\n                    <div id=\"assetsStatistics\">\r\n                        <h1>Wallet Assets</h1>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Date</th>\r\n                                    <th>Name</th>\r\n                                    <th>Symbol</th>\r\n                                    <th>Purchased</th>\r\n                                    <th>Applied</th>\r\n                                    <th>Amount</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    wallet.walletAssets.map((item, index) => (\r\n                                        <tr key={item.id}>\r\n                                            <td>{_formatDate(item.date)}</td>\r\n                                            <td>{item.asset.name}</td>\r\n                                            <td id=\"symbol\"><span className={item.asset.symbol===\"BTC\" ? \"BTC\" :\"\"}>{item.asset.symbol}</span></td>\r\n                                            <td className=\"currency\">{_formatPriceUSD(item.price)}</td>\r\n                                            <td id=\"applied\" className=\"currency\">{_formatPriceUSD(item.value)}</td>\r\n                                            <td id=\"amount\" className=\"number\">{parseInt(item.value / item.price)}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr>\r\n                                    <td colSpan=\"4\" align=\"right\">Total</td>\r\n                                    <td>{_formatPriceUSD(wallet.walletAssets.reduce((sum, item) => sum + item.value, 0))}</td>\r\n                                </tr>\r\n                            </tfoot>\r\n                        </table>\r\n                        <br /><br />\r\n\r\n                    </div>)\r\n            }\r\n        </PageDefault>\r\n    );\r\n}\r\n\r\nexport default WalletDashBoard;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport WalletInvestiment from './pages/wallet/Invest';\nimport WalletDashboard from './pages/wallet/Dashboard';\n\nconst Page404 = () => (\n  <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\n    <h1>Sorry, we couldn’t find that page</h1>\n    <p>\n      <a href=\"/\">Go Homepage</a>\n    </p>\n  </div>\n)\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/\" component={Home} exact />\n      <Route path=\"/wallet/dashboard\" component={WalletDashboard} />\n      <Route path=\"/wallet/apply\" component={WalletInvestiment} />\n      <Route component={Page404} />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}